name: Count lines of code

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  count-lines:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Count Lines of Code (cloc)
      uses: djdefi/cloc-action@2
      
    - name: Upload cloc output as a build artifact
      uses: actions/upload-artifact@v1
      with:
        name: cloc
        path: cloc.txt
        
    - name: Get cloc output
      uses: actions/download-artifact@v1
      with:
        name: cloc
    - name: Build JSON
      env:
        REPO: ${{ github.repository }}
      run: |
        echo '{ "loc": '$( cat cloc.txt | tail -2 | head -1 | grep -oE "[0-9]+$" )', "time": "'$(date -u --iso-8601=seconds)'", "repo": "'$REPO'" }' > loc.json
    - name: Upload JSON
      uses: actions/upload-artifact@v1
      with:
        name: JSON
        path: loc.json
    - name: Get JSON
      uses: actions/download-artifact@v1
      with:
        name: JSON
    #   echo $JSON
    #- run: echo "::set-env name=JSON::$({{ 'loc': $LOC, 'time': '$TSTAMP', 'repo': '$REPO' }})"
    #- run: echo ${{ toJSON(env) }}
    #- env:
    #    LOC: ${{ cat cloc.txt | tail -2 | head -1 | grep -oE "[0-9]+$" }}
    #    TSTAMP: ${{ date -u --iso-8601=seconds }}
    #    REPO: github.repository
    #    JSON: "{ 'loc': $LOC, 'time': '$TSTAMP', 'repo': '$REPO' }"
    #- run: echo $JSON 
    #- run: echo "::set-env name=JSON::$('{"loc": '"$LOC"'}')"
    #- run: echo '{"loc": '$LOC'}'
    #- run: cat cloc.txt | tail -2 | head -1 | grep -oE "[0-9]+$" > loc.txt
    #- run: echo '{"loc": '"$LOC"', "time": "'"$(date -u --iso-8601=seconds)"'", "repo": "repo-name"}'
    #- name: Upload munging  output as a build artifact
    #  uses: actions/upload-artifact@v1
    #  with:
    #    name: loc
    #    path: loc.txt
